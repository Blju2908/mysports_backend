"""New migration

Revision ID: f27054a29151
Revises: 97b4811d2625
Create Date: 2025-07-07 12:44:55.015549

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f27054a29151'
down_revision: Union[str, None] = '97b4811d2625'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # ✅ FIXED: Erstelle den Enum-Type BEVOR er verwendet wird
    op.execute("CREATE TYPE llmoperationstatus AS ENUM ('STARTED', 'SUCCESS', 'FAILED')")
    
    op.add_column('llm_call_logs', sa.Column('status', sa.Enum('STARTED', 'SUCCESS', 'FAILED', name='llmoperationstatus'), nullable=True))
    op.alter_column('llm_call_logs', 'error_message',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=True)
    op.alter_column('llm_call_logs', 'llm_operation_type',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('llm_call_logs', 'method')
    op.drop_column('llm_call_logs', 'ip_address')
    op.drop_column('llm_call_logs', 'training_plan_id')
    op.drop_column('llm_call_logs', 'success')
    op.drop_column('llm_call_logs', 'error_type')
    op.drop_column('llm_call_logs', 'response_summary')
    op.drop_column('llm_call_logs', 'request_data')
    op.drop_column('llm_call_logs', 'user_agent')
    op.drop_column('llm_call_logs', 'http_status_code')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('llm_call_logs', sa.Column('http_status_code', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('llm_call_logs', sa.Column('user_agent', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('llm_call_logs', sa.Column('request_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('llm_call_logs', sa.Column('response_summary', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('llm_call_logs', sa.Column('error_type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('llm_call_logs', sa.Column('success', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('llm_call_logs', sa.Column('training_plan_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('llm_call_logs', sa.Column('ip_address', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('llm_call_logs', sa.Column('method', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.alter_column('llm_call_logs', 'llm_operation_type',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('llm_call_logs', 'error_message',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_column('llm_call_logs', 'status')
    
    # ✅ FIXED: Lösche den Enum-Type NACH dem DROP COLUMN
    op.execute("DROP TYPE IF EXISTS llmoperationstatus")
    # ### end Alembic commands ###
