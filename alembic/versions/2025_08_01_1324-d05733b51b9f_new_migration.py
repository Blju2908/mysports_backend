"""Add uid column to sets table

Revision ID: d05733b51b9f
Revises: a8c5acc25a40
Create Date: 2025-08-01 13:24:06.393535

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'd05733b51b9f'
down_revision: Union[str, None] = 'a8c5acc25a40'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('sets', sa.Column('uid', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.create_index(op.f('ix_sets_uid'), 'sets', ['uid'], unique=True)
    
    # Populate existing sets with UIDs
    from uuid import uuid4
    from sqlalchemy import text
    
    # Get all existing sets and assign UIDs
    connection = op.get_bind()
    result = connection.execute(text("SELECT id FROM sets WHERE uid IS NULL"))
    for row in result:
        uid = str(uuid4())
        connection.execute(
            text("UPDATE sets SET uid = :uid WHERE id = :id"),
            {"uid": uid, "id": row[0]}
        )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_sets_uid'), table_name='sets')
    op.drop_column('sets', 'uid')
    # ### end Alembic commands ###
