"""New migration

Revision ID: e037346d2dca
Revises: 60065a338749
Create Date: 2025-06-23 16:24:45.173348

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'e037346d2dca'
down_revision: Union[str, None] = '60065a338749'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # 1. Spalte zun채chst nullable anlegen
    op.add_column('blocks', sa.Column('is_amrap', sa.Boolean(), nullable=True))

    # 2. Alle bestehenden Eintr채ge mit FALSE belegen
    op.execute("UPDATE blocks SET is_amrap = FALSE WHERE is_amrap IS NULL")

    # 3. Spalte als NOT NULL erzwingen
    op.alter_column('blocks', 'is_amrap', nullable=False)

    # 4. Alte Spalte aus exercises entfernen
    op.drop_column('exercises', 'is_amrap')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # 1. is_amrap zur체ck zu exercises (nullable zuerst)
    op.add_column('exercises', sa.Column('is_amrap', sa.Boolean(), nullable=True))

    # 2. Alle bestehenden Eintr채ge auf FALSE setzen
    op.execute("UPDATE exercises SET is_amrap = FALSE WHERE is_amrap IS NULL")

    # 3. Spalte als NOT NULL erzwingen
    op.alter_column('exercises', 'is_amrap', nullable=False)

    # 4. is_amrap aus blocks entfernen
    op.drop_column('blocks', 'is_amrap')
    # ### end Alembic commands ###
