"""New migration

Revision ID: 97b4811d2625
Revises: f4c3dceb4970
Create Date: 2025-06-30 19:32:20.722240

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '97b4811d2625'
down_revision: Union[str, None] = 'f4c3dceb4970'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Step 1: Add new columns as nullable first to avoid constraint violation
    op.add_column('exercise_descriptions', sa.Column('difficulty_level', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True))
    op.add_column('exercise_descriptions', sa.Column('primary_movement_pattern', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True))
    op.add_column('exercise_descriptions', sa.Column('is_unilateral', sa.Boolean(), nullable=True))
    
    # Step 2: Update existing rows with default values
    connection = op.get_bind()
    connection.execute(sa.text("""
        UPDATE exercise_descriptions 
        SET 
            difficulty_level = 'AnfÃ¤nger',
            primary_movement_pattern = 'Push',
            is_unilateral = false
        WHERE difficulty_level IS NULL
    """))
    
    # Step 3: Make columns NOT NULL after setting default values
    op.alter_column('exercise_descriptions', 'difficulty_level', nullable=False)
    op.alter_column('exercise_descriptions', 'primary_movement_pattern', nullable=False) 
    op.alter_column('exercise_descriptions', 'is_unilateral', nullable=False)
    
    # Step 4: Create indexes
    op.create_index(op.f('ix_exercise_descriptions_created_at'), 'exercise_descriptions', ['created_at'], unique=False)
    op.create_index(op.f('ix_exercise_descriptions_difficulty_level'), 'exercise_descriptions', ['difficulty_level'], unique=False)
    op.create_index(op.f('ix_exercise_descriptions_is_unilateral'), 'exercise_descriptions', ['is_unilateral'], unique=False)
    op.create_index(op.f('ix_exercise_descriptions_name_english'), 'exercise_descriptions', ['name_english'], unique=False)
    op.create_index(op.f('ix_exercise_descriptions_primary_movement_pattern'), 'exercise_descriptions', ['primary_movement_pattern'], unique=False)
    op.create_index(op.f('ix_exercise_descriptions_updated_at'), 'exercise_descriptions', ['updated_at'], unique=False)
    op.create_index('ix_exercise_difficulty_pattern', 'exercise_descriptions', ['difficulty_level', 'primary_movement_pattern'], unique=False)
    op.create_index('ix_exercise_names_text', 'exercise_descriptions', ['name_german', 'name_english'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_exercise_names_text', table_name='exercise_descriptions')
    op.drop_index('ix_exercise_difficulty_pattern', table_name='exercise_descriptions')
    op.drop_index(op.f('ix_exercise_descriptions_updated_at'), table_name='exercise_descriptions')
    op.drop_index(op.f('ix_exercise_descriptions_primary_movement_pattern'), table_name='exercise_descriptions')
    op.drop_index(op.f('ix_exercise_descriptions_name_english'), table_name='exercise_descriptions')
    op.drop_index(op.f('ix_exercise_descriptions_is_unilateral'), table_name='exercise_descriptions')
    op.drop_index(op.f('ix_exercise_descriptions_difficulty_level'), table_name='exercise_descriptions')
    op.drop_index(op.f('ix_exercise_descriptions_created_at'), table_name='exercise_descriptions')
    op.drop_column('exercise_descriptions', 'is_unilateral')
    op.drop_column('exercise_descriptions', 'primary_movement_pattern')
    op.drop_column('exercise_descriptions', 'difficulty_level')
    # ### end Alembic commands ###
