"""Add user activity log table

Revision ID: 0c852e14b102
Revises: 9d004d19355e
Create Date: 2025-05-27 09:06:55.095883

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '0c852e14b102'
down_revision: Union[str, None] = '9d004d19355e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_activity_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id_hash', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=True),
    sa.Column('session_id', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('endpoint', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('http_method', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('action_type', sa.Enum('LOGIN_SUCCESS', 'LOGIN_FAILED', 'LOGOUT', 'REGISTER_SUCCESS', 'REGISTER_FAILED', 'OTP_REQUEST', 'OTP_VERIFY_SUCCESS', 'OTP_VERIFY_FAILED', 'PASSWORD_CHANGE', 'EMAIL_CHANGE', 'TOKEN_REFRESH', 'WORKOUT_CREATE', 'WORKOUT_UPDATE', 'WORKOUT_DELETE', 'WORKOUT_VIEW', 'WORKOUT_START', 'WORKOUT_FINISH', 'WORKOUT_PAUSE', 'WORKOUT_RESUME', 'TRAINING_PLAN_CREATE', 'TRAINING_PLAN_UPDATE', 'TRAINING_PLAN_DELETE', 'TRAINING_PLAN_VIEW', 'TRAINING_PLAN_ASSIGN', 'EXERCISE_CREATE', 'EXERCISE_UPDATE', 'EXERCISE_DELETE', 'EXERCISE_VIEW', 'SET_CREATE', 'SET_UPDATE', 'SET_DELETE', 'SET_COMPLETE', 'LLM_WORKOUT_GENERATE', 'LLM_TRAINING_PLAN_GENERATE', 'LLM_FEEDBACK_ANALYZE', 'LLM_PROMPT_INJECTION_DETECTED', 'APP_FEEDBACK_CREATE', 'APP_FEEDBACK_UPDATE', 'WORKOUT_FEEDBACK_CREATE', 'SHOWCASE_FEEDBACK_CREATE', 'SHOWCASE_VIEW', 'SHOWCASE_TEMPLATE_CREATE', 'SHOWCASE_TEMPLATE_UPDATE', 'SUSPICIOUS_ACTIVITY_DETECTED', 'RATE_LIMIT_EXCEEDED', 'UNAUTHORIZED_ACCESS_ATTEMPT', 'API_ERROR', 'API_TIMEOUT', name='activityactiontype'), nullable=False),
    sa.Column('resource_id', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('resource_type', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('request_data', sa.JSON(), nullable=True),
    sa.Column('response_status_code', sa.Integer(), nullable=False),
    sa.Column('response_time_ms', sa.Integer(), nullable=True),
    sa.Column('ip_address', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=True),
    sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('device_fingerprint', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('country_code', sqlmodel.sql.sqltypes.AutoString(length=2), nullable=True),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('risk_level', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='risklevel'), nullable=False),
    sa.Column('risk_score', sa.Float(), nullable=True),
    sa.Column('risk_indicators', sa.JSON(), nullable=True),
    sa.Column('error_message', sqlmodel.sql.sqltypes.AutoString(length=1000), nullable=True),
    sa.Column('context_data', sa.JSON(), nullable=True),
    sa.Column('is_suspicious', sa.Boolean(), nullable=False),
    sa.Column('is_automated', sa.Boolean(), nullable=False),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_activity_logs_ip_address'), 'user_activity_logs', ['ip_address'], unique=False)
    op.create_index(op.f('ix_user_activity_logs_is_suspicious'), 'user_activity_logs', ['is_suspicious'], unique=False)
    op.create_index(op.f('ix_user_activity_logs_session_id'), 'user_activity_logs', ['session_id'], unique=False)
    op.create_index(op.f('ix_user_activity_logs_timestamp'), 'user_activity_logs', ['timestamp'], unique=False)
    op.create_index(op.f('ix_user_activity_logs_user_id_hash'), 'user_activity_logs', ['user_id_hash'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_activity_logs_user_id_hash'), table_name='user_activity_logs')
    op.drop_index(op.f('ix_user_activity_logs_timestamp'), table_name='user_activity_logs')
    op.drop_index(op.f('ix_user_activity_logs_session_id'), table_name='user_activity_logs')
    op.drop_index(op.f('ix_user_activity_logs_is_suspicious'), table_name='user_activity_logs')
    op.drop_index(op.f('ix_user_activity_logs_ip_address'), table_name='user_activity_logs')
    op.drop_table('user_activity_logs')
    # ### end Alembic commands ###
